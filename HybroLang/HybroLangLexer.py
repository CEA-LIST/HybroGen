# Generated from HybroLang.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\60")
        buf.write("\u0142\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\3\3\3\3\4\3\4\3\5")
        buf.write("\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f")
        buf.write("\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3")
        buf.write("\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26")
        buf.write("\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!")
        buf.write("\3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3&\3&\3&\3\'\3")
        buf.write("\'\3\'\3(\3(\5(\u00e6\n(\3(\5(\u00e9\n(\3)\3)\5)\u00ed")
        buf.write("\n)\3)\3)\3)\5)\u00f2\n)\3)\5)\u00f5\n)\3*\3*\3+\5+\u00fa")
        buf.write("\n+\3+\3+\3+\3+\3+\5+\u0101\n+\3,\3,\3-\3-\7-\u0107\n")
        buf.write("-\f-\16-\u010a\13-\3.\6.\u010d\n.\r.\16.\u010e\3/\3/\3")
        buf.write("\60\3\60\3\61\3\61\3\62\3\62\7\62\u0119\n\62\f\62\16\62")
        buf.write("\u011c\13\62\3\63\3\63\3\63\3\63\6\63\u0122\n\63\r\63")
        buf.write("\16\63\u0123\3\63\3\63\3\64\6\64\u0129\n\64\r\64\16\64")
        buf.write("\u012a\3\64\3\64\3\65\3\65\3\65\3\65\7\65\u0133\n\65\f")
        buf.write("\65\16\65\u0136\13\65\3\65\3\65\3\65\3\65\3\66\5\66\u013d")
        buf.write("\n\66\3\66\3\66\3\66\3\66\3\u0134\2\67\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q\2S\2U\2W*Y+[")
        buf.write("\2]\2_\2a\2c,e-g.i/k\60\3\2\n\6\2HHNNhhnn\3\2\62;\3\2")
        buf.write("\63;\4\2--//\4\2C\\c|\6\2\62;C\\aac|\3\2++\4\2\13\13\"")
        buf.write("\"\2\u0148\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2")
        buf.write("\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2")
        buf.write("\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2")
        buf.write("\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#")
        buf.write("\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2W\3\2")
        buf.write("\2\2\2Y\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3")
        buf.write("\2\2\2\2k\3\2\2\2\3m\3\2\2\2\5o\3\2\2\2\7q\3\2\2\2\ts")
        buf.write("\3\2\2\2\13u\3\2\2\2\rw\3\2\2\2\17y\3\2\2\2\21}\3\2\2")
        buf.write("\2\23\u0080\3\2\2\2\25\u0085\3\2\2\2\27\u008c\3\2\2\2")
        buf.write("\31\u008e\3\2\2\2\33\u0090\3\2\2\2\35\u0092\3\2\2\2\37")
        buf.write("\u0094\3\2\2\2!\u0096\3\2\2\2#\u0098\3\2\2\2%\u009a\3")
        buf.write("\2\2\2\'\u009d\3\2\2\2)\u00a0\3\2\2\2+\u00a2\3\2\2\2-")
        buf.write("\u00a4\3\2\2\2/\u00a6\3\2\2\2\61\u00aa\3\2\2\2\63\u00af")
        buf.write("\3\2\2\2\65\u00b4\3\2\2\2\67\u00ba\3\2\2\29\u00be\3\2")
        buf.write("\2\2;\u00c2\3\2\2\2=\u00c6\3\2\2\2?\u00cb\3\2\2\2A\u00d0")
        buf.write("\3\2\2\2C\u00d3\3\2\2\2E\u00d6\3\2\2\2G\u00d9\3\2\2\2")
        buf.write("I\u00db\3\2\2\2K\u00dd\3\2\2\2M\u00e0\3\2\2\2O\u00e3\3")
        buf.write("\2\2\2Q\u00f4\3\2\2\2S\u00f6\3\2\2\2U\u0100\3\2\2\2W\u0102")
        buf.write("\3\2\2\2Y\u0104\3\2\2\2[\u010c\3\2\2\2]\u0110\3\2\2\2")
        buf.write("_\u0112\3\2\2\2a\u0114\3\2\2\2c\u0116\3\2\2\2e\u011d\3")
        buf.write("\2\2\2g\u0128\3\2\2\2i\u012e\3\2\2\2k\u013c\3\2\2\2mn")
        buf.write("\7*\2\2n\4\3\2\2\2op\7+\2\2p\6\3\2\2\2qr\7}\2\2r\b\3\2")
        buf.write("\2\2st\7\177\2\2t\n\3\2\2\2uv\7.\2\2v\f\3\2\2\2wx\7=\2")
        buf.write("\2x\16\3\2\2\2yz\7h\2\2z{\7q\2\2{|\7t\2\2|\20\3\2\2\2")
        buf.write("}~\7k\2\2~\177\7h\2\2\177\22\3\2\2\2\u0080\u0081\7g\2")
        buf.write("\2\u0081\u0082\7n\2\2\u0082\u0083\7u\2\2\u0083\u0084\7")
        buf.write("g\2\2\u0084\24\3\2\2\2\u0085\u0086\7t\2\2\u0086\u0087")
        buf.write("\7g\2\2\u0087\u0088\7v\2\2\u0088\u0089\7w\2\2\u0089\u008a")
        buf.write("\7t\2\2\u008a\u008b\7p\2\2\u008b\26\3\2\2\2\u008c\u008d")
        buf.write("\7?\2\2\u008d\30\3\2\2\2\u008e\u008f\7]\2\2\u008f\32\3")
        buf.write("\2\2\2\u0090\u0091\7_\2\2\u0091\34\3\2\2\2\u0092\u0093")
        buf.write("\7,\2\2\u0093\36\3\2\2\2\u0094\u0095\7\61\2\2\u0095 \3")
        buf.write("\2\2\2\u0096\u0097\7-\2\2\u0097\"\3\2\2\2\u0098\u0099")
        buf.write("\7/\2\2\u0099$\3\2\2\2\u009a\u009b\7>\2\2\u009b\u009c")
        buf.write("\7>\2\2\u009c&\3\2\2\2\u009d\u009e\7@\2\2\u009e\u009f")
        buf.write("\7@\2\2\u009f(\3\2\2\2\u00a0\u00a1\7(\2\2\u00a1*\3\2\2")
        buf.write("\2\u00a2\u00a3\7~\2\2\u00a3,\3\2\2\2\u00a4\u00a5\7`\2")
        buf.write("\2\u00a5.\3\2\2\2\u00a6\u00a7\7k\2\2\u00a7\u00a8\7p\2")
        buf.write("\2\u00a8\u00a9\7v\2\2\u00a9\60\3\2\2\2\u00aa\u00ab\7w")
        buf.write("\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad\7p\2\2\u00ad\u00ae")
        buf.write("\7v\2\2\u00ae\62\3\2\2\2\u00af\u00b0\7u\2\2\u00b0\u00b1")
        buf.write("\7k\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7v\2\2\u00b3\64")
        buf.write("\3\2\2\2\u00b4\u00b5\7u\2\2\u00b5\u00b6\7w\2\2\u00b6\u00b7")
        buf.write("\7k\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9\7v\2\2\u00b9\66")
        buf.write("\3\2\2\2\u00ba\u00bb\7h\2\2\u00bb\u00bc\7n\2\2\u00bc\u00bd")
        buf.write("\7v\2\2\u00bd8\3\2\2\2\u00be\u00bf\7e\2\2\u00bf\u00c0")
        buf.write("\7r\2\2\u00c0\u00c1\7n\2\2\u00c1:\3\2\2\2\u00c2\u00c3")
        buf.write("\7r\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5\7z\2\2\u00c5<\3")
        buf.write("\2\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7r\2\2\u00c8\u00c9")
        buf.write("\7x\2\2\u00c9\u00ca\7\66\2\2\u00ca>\3\2\2\2\u00cb\u00cc")
        buf.write("\7k\2\2\u00cc\u00cd\7r\2\2\u00cd\u00ce\7x\2\2\u00ce\u00cf")
        buf.write("\78\2\2\u00cf@\3\2\2\2\u00d0\u00d1\7]\2\2\u00d1\u00d2")
        buf.write("\7_\2\2\u00d2B\3\2\2\2\u00d3\u00d4\7?\2\2\u00d4\u00d5")
        buf.write("\7?\2\2\u00d5D\3\2\2\2\u00d6\u00d7\7#\2\2\u00d7\u00d8")
        buf.write("\7?\2\2\u00d8F\3\2\2\2\u00d9\u00da\7>\2\2\u00daH\3\2\2")
        buf.write("\2\u00db\u00dc\7@\2\2\u00dcJ\3\2\2\2\u00dd\u00de\7>\2")
        buf.write("\2\u00de\u00df\7?\2\2\u00dfL\3\2\2\2\u00e0\u00e1\7@\2")
        buf.write("\2\u00e1\u00e2\7?\2\2\u00e2N\3\2\2\2\u00e3\u00e5\5U+\2")
        buf.write("\u00e4\u00e6\5Q)\2\u00e5\u00e4\3\2\2\2\u00e5\u00e6\3\2")
        buf.write("\2\2\u00e6\u00e8\3\2\2\2\u00e7\u00e9\5S*\2\u00e8\u00e7")
        buf.write("\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e9P\3\2\2\2\u00ea\u00ec")
        buf.write("\7g\2\2\u00eb\u00ed\5a\61\2\u00ec\u00eb\3\2\2\2\u00ec")
        buf.write("\u00ed\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00f5\5[.\2\u00ef")
        buf.write("\u00f1\7G\2\2\u00f0\u00f2\5a\61\2\u00f1\u00f0\3\2\2\2")
        buf.write("\u00f1\u00f2\3\2\2\2\u00f2\u00f3\3\2\2\2\u00f3\u00f5\5")
        buf.write("[.\2\u00f4\u00ea\3\2\2\2\u00f4\u00ef\3\2\2\2\u00f5R\3")
        buf.write("\2\2\2\u00f6\u00f7\t\2\2\2\u00f7T\3\2\2\2\u00f8\u00fa")
        buf.write("\5[.\2\u00f9\u00f8\3\2\2\2\u00f9\u00fa\3\2\2\2\u00fa\u00fb")
        buf.write("\3\2\2\2\u00fb\u00fc\7\60\2\2\u00fc\u0101\5[.\2\u00fd")
        buf.write("\u00fe\5[.\2\u00fe\u00ff\7\60\2\2\u00ff\u0101\3\2\2\2")
        buf.write("\u0100\u00f9\3\2\2\2\u0100\u00fd\3\2\2\2\u0101V\3\2\2")
        buf.write("\2\u0102\u0103\5[.\2\u0103X\3\2\2\2\u0104\u0108\5_\60")
        buf.write("\2\u0105\u0107\5]/\2\u0106\u0105\3\2\2\2\u0107\u010a\3")
        buf.write("\2\2\2\u0108\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109Z")
        buf.write("\3\2\2\2\u010a\u0108\3\2\2\2\u010b\u010d\5]/\2\u010c\u010b")
        buf.write("\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u010c\3\2\2\2\u010e")
        buf.write("\u010f\3\2\2\2\u010f\\\3\2\2\2\u0110\u0111\t\3\2\2\u0111")
        buf.write("^\3\2\2\2\u0112\u0113\t\4\2\2\u0113`\3\2\2\2\u0114\u0115")
        buf.write("\t\5\2\2\u0115b\3\2\2\2\u0116\u011a\t\6\2\2\u0117\u0119")
        buf.write("\t\7\2\2\u0118\u0117\3\2\2\2\u0119\u011c\3\2\2\2\u011a")
        buf.write("\u0118\3\2\2\2\u011a\u011b\3\2\2\2\u011bd\3\2\2\2\u011c")
        buf.write("\u011a\3\2\2\2\u011d\u011e\7%\2\2\u011e\u011f\7*\2\2\u011f")
        buf.write("\u0121\3\2\2\2\u0120\u0122\n\b\2\2\u0121\u0120\3\2\2\2")
        buf.write("\u0122\u0123\3\2\2\2\u0123\u0121\3\2\2\2\u0123\u0124\3")
        buf.write("\2\2\2\u0124\u0125\3\2\2\2\u0125\u0126\7+\2\2\u0126f\3")
        buf.write("\2\2\2\u0127\u0129\t\t\2\2\u0128\u0127\3\2\2\2\u0129\u012a")
        buf.write("\3\2\2\2\u012a\u0128\3\2\2\2\u012a\u012b\3\2\2\2\u012b")
        buf.write("\u012c\3\2\2\2\u012c\u012d\b\64\2\2\u012dh\3\2\2\2\u012e")
        buf.write("\u012f\7\61\2\2\u012f\u0130\7\61\2\2\u0130\u0134\3\2\2")
        buf.write("\2\u0131\u0133\13\2\2\2\u0132\u0131\3\2\2\2\u0133\u0136")
        buf.write("\3\2\2\2\u0134\u0135\3\2\2\2\u0134\u0132\3\2\2\2\u0135")
        buf.write("\u0137\3\2\2\2\u0136\u0134\3\2\2\2\u0137\u0138\5k\66\2")
        buf.write("\u0138\u0139\3\2\2\2\u0139\u013a\b\65\2\2\u013aj\3\2\2")
        buf.write("\2\u013b\u013d\7\17\2\2\u013c\u013b\3\2\2\2\u013c\u013d")
        buf.write("\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u013f\7\f\2\2\u013f")
        buf.write("\u0140\3\2\2\2\u0140\u0141\b\66\2\2\u0141l\3\2\2\2\21")
        buf.write("\2\u00e5\u00e8\u00ec\u00f1\u00f4\u00f9\u0100\u0108\u010e")
        buf.write("\u011a\u0123\u012a\u0134\u013c\3\b\2\2")
        return buf.getvalue()


class HybroLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    DecimalFloatingConstant = 39
    IntegerConstant = 40
    DecimalConstant = 41
    Name = 42
    INLINE = 43
    WhiteSpace = 44
    LineComment = 45
    NewLine = 46

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'{'", "'}'", "','", "';'", "'for'", "'if'", "'else'", 
            "'return'", "'='", "'['", "']'", "'*'", "'/'", "'+'", "'-'", 
            "'<<'", "'>>'", "'&'", "'|'", "'^'", "'int'", "'uint'", "'sint'", 
            "'suint'", "'flt'", "'cpl'", "'pix'", "'ipv4'", "'ipv6'", "'[]'", 
            "'=='", "'!='", "'<'", "'>'", "'<='", "'>='" ]

    symbolicNames = [ "<INVALID>",
            "DecimalFloatingConstant", "IntegerConstant", "DecimalConstant", 
            "Name", "INLINE", "WhiteSpace", "LineComment", "NewLine" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "DecimalFloatingConstant", "ExponentPart", "FloatingSuffix", 
                  "FractionalConstant", "IntegerConstant", "DecimalConstant", 
                  "DigitSequence", "Digit", "NonzeroDigit", "Sign", "Name", 
                  "INLINE", "WhiteSpace", "LineComment", "NewLine" ]

    grammarFileName = "HybroLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



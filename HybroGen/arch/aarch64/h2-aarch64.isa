# Arm 64 bits ISA definition
#
# Reference ARM data sheet Document Number: ARM DDI 0596, ID093022
# https://developer.arm.com/documentation/ddi0602/latest

ARCH arm 32

#ABS 32
#0 1 0 11010110 00000 001000 r1[4:0] r0[4:0]         | A64 i 1 32 abs abs r0 r1
#ABS 64
#1 1 0 11010110 00000 001000 r1[4:0] r0[4:0]         | A64 i 1 64 abs abs r0 r1

#ADD 32
# 0 0 0 100010 0 i0[11:0] r1[4:0] r0[4:0]              | A64 i 1 32 add add r0 r1 i0
#ADD 64
1 0 0 100010 0 i0[11:0] r1[4:0] r0[4:0]              | A64 i 1 64 add add r0 r1 i0
1 0 0 100010 0 i0[11:0] r1[4:0] r0[4:0]              | A64 f 1 64 add fadd r0 r1 i0
#ADD 32 p21
#0 0 0 01011 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]     | A64 i 1 32 add add r0 r1 r2
#ADD 64 p21
1 0 0 01011 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]      | A64 i 1 64 add add r0 r1 r2
#ADD (shifted register) 32
#0 0 0 01011 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]     | A64 i 1 32 add add r0 r1 r2
#ADD (shifted register) 64
#1 0 0 01011 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]     | A64 i 1 64 add add r0 r1 r2
#ADCS 32
#0 0 1 11010000 r2[4:0] 000000 r1[4:0] r0[4:0]       | A64 i 1 32 add adcs r0 r1 r2
#ADCS 64
#1 0 1 11010000 r2[4:0] 000000 r1[4:0] r0[4:0]       | A64 i 1 64 add adcs r0 r1 r2
#ADC 32
#0 0 0 11010000 r2[4:0] 000000 r1[4:0] r0[4:0]       | A64 i 1 32 add adc r0 r1 r2
#ADC 64
#1 0 0 11010000 r2[4:0] 000000 r1[4:0] r0[4:0]       | A64 i 1 64 add adc r0 r1 r2
#ADDS (shifted register)
#0 0 1 01011 00 0 r2[4:0] 0000000 r1[4:0] r0[4:0]    | A64 i 1 32 add ads r0 r1 r2
#ADDS (shifted register)
#1 0 1 01011 00 0 r2[4:0] 0000000 r1[4:0] r0[4:0]    | A64 i 1 64 add ads r0 r1 r2

#AND
#0 00 01010 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]      | A64 i 1 32 and and r0 r1 r2
#AND
1 00 01010 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]       | A64 i 1 64 and and r0 r1 r2

#B
0 00101 i0[25:0]                                     | A64 i 1 64 ba b i0

#B.cond
01010100 i0[18:0] 0 1011                             | A64 i 1 64 blt b.lt i0
01010100 i0[18:0] 0 1101                             | A64 i 1 64 ble b.le i0
01010100 i0[18:0] 0 1100                             | A64 i 1 64 bgt b.gt i0
01010100 i0[18:0] 0 1010                             | A64 i 1 64 bge b.ge i0
01010100 i0[18:0] 0 0001                             | A64 i 1 64 bne b.ne i0
01010100 i0[18:0] 0 0000                             | A64 i 1 64 beq b.eq i0

#CMP 32
#0 1 1 100010 1 i0[11:0] r1[4:0] 11111               | A64 i 1 32 cmp cmp r1 i0
#CMP 64
# 1 1 1 100010 1 i0[11:0] r1[4:0] 11111                | A64 i 1 64 cmp cmp r1 i0
#CMP 32
#0 1 1 01011 00 0 r2[4:0] 000000 r1[4:0] 11111       | A64 i 1 32 cmp cmp r1 r2
#CMP 64
1 1 1 01011 00 0 r2[4:0] 000000 r1[4:0] 11111        | A64 i 1 64 cmp cmp r1 r2

#EOR 64 (shifted register)
1 10 01010 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]       | A64 i 1 64 xor eor r0 r1 r2
#EOR (immediate)
1 10 100100 0 i0[11:0] r0[4:0] r1[4:0]               | A64 i 1 64 xor eor r0 r1 i0

#LDR (immediate, 32)
10 111 0 01 01 i0[11:0] r1[4:0] r0[4:0]              | A64 i 1 32 r ldr r0 r1 i0
#LDR (immediate, 64)
11 111 0 00 01 i0[11:0] r1[4:0] r0[4:0]              | A64 i 1 64 r ldr r0 r1 i0
#LDRB
00 111 0 01 01 i0[11:0] r1[4:0] r0[4:0]              | A64 i 1 8 r ldrb r0 r1 i0
#LDRH
01 111 0 01 01 i0[11:0] r1[4:0] r0[4:0]              | A64 i 1 16 r ldrh r0 r1 i0
#LDR 32 (immediate, SIMD&FP)
10 111 1 00 01 0 i0[8:0] 01 r1[4:0] r0[4:0]          | A64 f 1 32 r ldr r0 r1 i0
#LDR 64 (immediate, SIMD&FP)
11 111 1 01 01 i0[11:0] r1[4:0] r0[4:0]              | A64 f 1 64 r ldr r0 r1 i0
#LDR 32 (register)
10 111 1 00 01 1 r2[4:0] 110 1 10 r1[4:0] r0[4:0]    | A64 f 1 32 r ldr r0 r1 r2
#LDR 64 (register)
11 111 1 00 01 1 r2[4:0] 110 1 10 r1[4:0] r0[4:0]    | A64 i 1 64 r ldr r0 r1 r2

#MOV (wide immediate) 32
0 10 100101 00 i0[15:0] r0[4:0]                      | A64 i 1 32 mv mov r0 i0
#MOV (wide immediate) 64
1 10 100101 00 i0[15:0] r0[4:0]                      | A64 i 1 64 mv mov r0 i0
#MOV (to/from SP) 32
0 0 0 100010 0 000000000000 r1[4:0] r0[4:0]          | A64 i 1 32 mv mov r0 r1
#MOV (to/from SP) 64
1 0 0 100010 0 000000000000 r1[4:0] r0[4:0]          | A64 i 1 64 mv mov r0 r1

#MUL 32
0 00 11011 000 r2[4:0] 0 11111 r1[4:0] r0[4:0]       | A64 i 1 32 mul mul r0 r1 r2
#MUL 64
1 00 11011 000 r2[4:0] 0 11111 r1[4:0] r0[4:0]       | A64 i 1 64 mul mul r0 r1 r2

#NEG (shifted register) 32
#0 1 0 01011 00 0 r1[4:0] i0[5:0] 11111 r0[4:0]      | A64 i 1 32 neg neg r0 r1 r2
#NEG (shifted register) 64
#1 1 0 01011 00 0 r1[4:0] i0[5:0] 11111 r0[4:0]      | A64 i 1 64 neg neg r0 r1 r2

#ORN (shifted register) 32
#0 01 01010 00 1 r2[4:0] i0[5:0] r1[4:0] r0[4:0]     | A64 i 1 32 orn orn r0 r1 r2 i0
#ORN (shifted register) 64
#1 01 01010 00 1 r2[4:0] i0[5:0] r1[4:0] r0[4:0]     | A64 i 1 64 orn orn r0 r1 r2 i0

#ORR (shifted register)
0 01 01010 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]       | A64 i 1 32 or orr r0 r1 r2
#ORR (shifted register)
1 01 01010 00 0 r2[4:0] 000000 r1[4:0] r0[4:0]       | A64 i 1 64 or orr r0 r1 r2

#RET
1101011 0 0 10 11111 0000 0 0 11110 00000            | A64 i 1 64 ret ret

#SDIV 32
0 0 0 11010110 r2[4:0] 00001 1 r1[4:0] r0[4:0]       | A64 i 1 32 div sdiv r0 r1 r2
#SDIV 64
1 0 0 11010110 r2[4:0] 00001 1 r1[4:0] r0[4:0]       | A64 i 1 64 div sdiv r0 r1 r2

#SUB 32
0 1 0 01011 00 0 r2[4:0] 000 000 r1[4:0] r0[4:0]     | A64 i 1 32 sub sub r0 r1 r2
#SUB 64
1 1 0 01011 00 0 r2[4:0] 000 000 r1[4:0] r0[4:0]     | A64 i 1 64 sub sub r0 r1 r2
#SUB (immediate) 32
0 1 0 100010 0 i0[11:0] r1[4:0] r0[4:0]              | A64 i 1 32 sub sub r0 r1 i0
#SUB (immediate) 64
1 1 0 100010 0 i0[11:0] r1[4:0] r0[4:0]              | A64 i 1 64 sub sub r0 r1 i0

#STR 32 (register)
10 111 0 00 00 1 r2[4:0] 110 1 10 r0[4:0] r1[4:0]    | A64 i 1 32 w str r0 r1 r2
#STR 64 (register)
11 111 0 00 00 1 r2[4:0] 110 1 10 r1[4:0] r0[4:0]    | A64 i 1 64 w str r0 r1 r2
#STR 32 (immediate)
10 111 0 00 00 0 i0[8:0] 01 r0[4:0] r1[4:0]          | A64 i 1 32 w str r0 r1 i0
#STR 64 (immediate)
11 111 0 00 00 0 i0[8:0] 01 r0[4:0] r1[4:0]          | A64 i 1 64 w str r0 r1 i0
#STRB
00 111 0 00 00 0 i0[8:0] 01 r0[4:0] r1[4:0]          | A64 i 1 8 w strb r0 r1 i0
#STRH
01 111 0 00 00 0 i0[8:0] 01 r0[4:0] r1[4:0]          | A64 i 1 16 w strh r0 r1 i0

#UDIV 32
#0 0 0 11010110 r2[4:0] 00001 0 r1[4:0] r0[4:0]      | A64 i 1 32 div udiv r0 r1 r2
#UDIV 64
#1 0 0 11010110 r2[4:0] 00001 0 r1[4:0] r0[4:0]      | A64 i 1 64 div udiv r0 r1 r2

############################ SIMD and floating-point Instructions ###############

#ABS
#0 0 0 01110 00 10000 01011 10 r1[4:0] r0[4:0]       | A64 i 1 64 abs abs r0 r1

#ADD (Vector) 16
#0 Q 0 01110 sz 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]    | A64 i 1 16 add add r0 r1 r2
0 0 0 01110 00 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 8 8 add add r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 16 8 add add r0 r1 r2
0 0 0 01110 01 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 4 16 add add r0 r1 r2
0 1 0 01110 01 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 8 16 add add r0 r1 r2
0 0 0 01110 10 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 2 32 add add r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 4 32 add add r0 r1 r2
0 1 0 01110 11 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 2 64 add add r0 r1 r2

#AND (Vector)
0 0 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 8 8 and and r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 16 8 and and r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 16 and and r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 4 16 and and r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 8 16 and and r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 16 16 and and r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 32 and and r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 4 32 and and r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 64 and and r0 r1 r2

#EOR (Vector)
0 0 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 8 8 xor eor r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 16 8 xor eor r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 16 xor eor r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 4 16 xor eor r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 8 16 xor eor r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 16 16 xor eor r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 32 xor eor r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 4 32 xor eor r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 64 xor eor r0 r1 r2

#FADD (scalar) 32
0 0 0 11110 00 1 r2[4:0] 001 0 10 r1[4:0] r0[4:0]    | A64 f 1 32 add fadd r0 r1 r2
0 0 0 11110 00 1 r2[4:0] 001 0 10 r1[4:0] r0[4:0]    | A64 f 1 32 add add r0 r1 r2
#FADD (scalar) 64
0 0 0 11110 01 1 r2[4:0] 001 0 10 r1[4:0] r0[4:0]    | A64 f 1 64 add fadd r0 r1 r2
#FADD (vector)
0 0 0 01110 0 10 r2[4:0] 00 010 1 r1[4:0] r0[4:0]    | A64 f 4 16 add fadd r0 r1 r2
0 1 0 01110 0 10 r2[4:0] 00 010 1 r1[4:0] r0[4:0]    | A64 f 8 16 add fadd r0 r1 r2
0 0 0 01110 0 0 1 r2[4:0] 11010 1 r1[4:0] r0[4:0]    | A64 f 2 32 add fadd r0 r1 r2
0 1 0 01110 0 0 1 r2[4:0] 11010 1 r1[4:0] r0[4:0]    | A64 f 4 32 add fadd r0 r1 r2
0 1 0 01110 0 1 1 r2[4:0] 11010 1 r1[4:0] r0[4:0]    | A64 f 2 64 add fadd r0 r1 r2

#FDIV (vector)
0 0 1 01110 0 10 r2[4:0] 00 111 1 r1[4:0] r0[4:0]    | A64 f 4 16 div fdiv r0 r1 r2
0 1 1 01110 0 10 r2[4:0] 00 111 1 r1[4:0] r0[4:0]    | A64 f 8 16 div fdiv r0 r1 r2
0 0 1 01110 0 0 1 r2[4:0] 11111 1 r1[4:0] r0[4:0]    | A64 f 2 32 div fdiv r0 r1 r2
0 1 1 01110 0 0 1 r2[4:0] 11111 1 r1[4:0] r0[4:0]    | A64 f 4 32 div fdiv r0 r1 r2
0 1 1 01110 0 1 1 r2[4:0] 11111 1 r1[4:0] r0[4:0]    | A64 f 2 64 div fdiv r0 r1 r2

0 0 1 01110 0 10 r2[4:0] 00 111 1 r1[4:0] r0[4:0]    | A64 i 4 16 div fdiv r0 r1 r2
0 1 1 01110 0 10 r2[4:0] 00 111 1 r1[4:0] r0[4:0]    | A64 i 8 16 div fdiv r0 r1 r2
0 0 1 01110 0 0 1 r2[4:0] 11111 1 r1[4:0] r0[4:0]    | A64 i 2 32 div fdiv r0 r1 r2
0 1 1 01110 0 0 1 r2[4:0] 11111 1 r1[4:0] r0[4:0]    | A64 i 4 32 div fdiv r0 r1 r2
0 1 1 01110 0 1 1 r2[4:0] 11111 1 r1[4:0] r0[4:0]    | A64 i 2 64 div fdiv r0 r1 r2

#FMOV 32 (register)
0 0 0 11110 00 1 0000 00 10000 r1[4:0] r0[4:0]       | A64 f 1 32 mv fmov r0 r1
#FMOV 64 (register)
0 0 0 11110 01 1 0000 00 10000 r1[4:0] r0[4:0]       | A64 f 1 64 mv fmov r0 r1
#FMOV 32 (scalar, immediate)
0 0 0 11110 00 1 i0[7:0] 100 00000 r0[4:0]           | A64 f 1 32 mv fmov r0 i0
#FMOV 64 (scalar, immediate)
0 0 0 11110 01 1 i0[7:0] 100 00000 r0[4:0]           | A64 f 1 64 mv fmov r0 i0

#FMUL (scalar)
0 0 0 11110 00 1 r2[4:0] 0 000 10 r1[4:0] r0[4:0]    | A64 f 1 32 mul fmul r0 r1 r2
#FMUL (scalar)
0 0 0 11110 01 1 r2[4:0] 0 000 10 r1[4:0] r0[4:0]    | A64 f 1 64 mul fmul r0 r1 r2

#LDR (immediate, SIMD&FP)
#00 111 1 00 01 0 i0[8:0] 01 r1[4:0] r0[4:0]         | A64 i 1 8 r ldr r0 r1 i0
#01 111 1 00 01 0 i0[8:0] 01 r1[4:0] r0[4:0]         | A64 i 1 16 r ldr r0 r1 i0
#10 111 1 00 01 0 i0[8:0] 01 r1[4:0] r0[4:0]         | A64 i 1 32 r ldr r0 r1 i0
#11 111 1 00 01 0 i0[8:0] 01 r1[4:0] r0[4:0]         | A64 i 1 64 r ldr r0 r1 i0
#00 111 1 00 11 0 i0[8:0] 01 r1[4:0] r0[4:0]         | A64 i 1 128 r ldr r0 r1 i0
00 101 1 00 11 i0[6:0] 00000 r1[4:0] r0[4:0]        | A64 i 2 32 r ldp r0 r1 i0

#MOV (vector)
0 0 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 8 8 mv mov r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 8 16 mv mov r0 r1 r2
#MOV (from General)
#0 1 0 01110000 00001 0 0011 1 r1[4:0] r2[4:0]        | A64 i 1 8 mv mov r0 r1
#0 1 0 01110000 00010 0 0011 1 r1[4:0] r2[4:0]        | A64 i 1 16 mv mov r0 r1
#0 1 0 01110000 00100 0 0011 1 r1[4:0] r2[4:0]        | A64 i 1 32 mv mov r0 r1
#0 1 0 01110000 01000 0 0011 1 r1[4:0] r2[4:0]        | A64 i 1 64 mv mov r0 r1
0 1 0 01110000 01000 0 0011 1 r1[4:0] r0[4:0]        | A64 i 2 32 mv mov r0 r1

#MOVI
0 0 0 0111100000 0 0 0 1100 0 1 0 0 0 i0[1:0] r0[4:0]| A64 i 2 32 mv movi r0 i0

#FSUB (scalar) 32
0 0 0 11110 00 1 r2[4:0] 001 1 10 r1[4:0] r0[4:0]    | A64 f 1 32 sub fsub r0 r1 r2
#FSUB (scalar) 64
0 0 0 11110 01 1 r2[4:0] 001 1 10 r1[4:0] r0[4:0]    | A64 f 1 64 sub fsub r0 r1 r2
#FSUB (vector)
0 0 0 01110 1 0 1 r2[4:0] 00 010 1 r1[4:0] r0[4:0]   | A64 f 4 16 sub fsub r0 r1 r2
0 1 0 01110 1 0 1 r2[4:0] 00 010 1 r1[4:0] r0[4:0]   | A64 f 8 16 sub fsub r0 r1 r2
0 0 0 01110 1 0 1 r2[4:0] 11010 1 r1[4:0] r0[4:0]    | A64 f 2 32 sub fsub r0 r1 r2
0 1 0 01110 1 0 1 r2[4:0] 11010 1 r1[4:0] r0[4:0]    | A64 f 4 32 sub fsub r0 r1 r2
0 1 0 01110 1 1 1 r2[4:0] 11010 1 r1[4:0] r0[4:0]    | A64 f 2 64 sub fsub r0 r1 r2

#FDIV 32
0 0 0 11110 00 1 r2[4:0] 0001 10 r1[4:0] r0[4:0]     | A64 f 1 32 div fdiv r0 r1 r2
#FDIV 64
0 0 0 11110 01 1 r2[4:0] 0001 10 r1[4:0] r0[4:0]     | A64 f 1 64 div fdiv r0 r1 r2

#MUL (vector)
0 0 0 01110 00 1 r2[4:0] 10011 1 r1[4:0] r0[4:0]     | A64 i 8 8 mul mul r0 r1 r2
0 1 0 01110 00 1 r2[4:0] 10011 1 r1[4:0] r0[4:0]     | A64 i 16 8 mul mul r0 r1 r2
0 0 0 01110 01 1 r2[4:0] 10011 1 r1[4:0] r0[4:0]     | A64 i 4 16 mul mul r0 r1 r2
0 1 0 01110 01 1 r2[4:0] 10011 1 r1[4:0] r0[4:0]     | A64 i 8 16 mul mul r0 r1 r2
0 0 0 01110 10 1 r2[4:0] 10011 1 r1[4:0] r0[4:0]     | A64 i 2 32 mul mul r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 10011 1 r1[4:0] r0[4:0]     | A64 i 4 32 mul mul r0 r1 r2

#FMUL (vector)
0 0 1 01110 0 10 r2[4:0] 00 011 1 r1[4:0] r0[4:0]    | A64 f 4 16 mul fmul r0 r1 r2
0 1 1 01110 0 10 r2[4:0] 00 011 1 r1[4:0] r0[4:0]    | A64 f 8 16 mul fmul r0 r1 r2
0 0 1 01110 0 0 1 r2[4:0] 11011 1 r1[4:0] r0[4:0]    | A64 f 2 32 mul fmul r0 r1 r2
0 1 1 01110 0 0 1 r2[4:0] 11011 1 r1[4:0] r0[4:0]    | A64 f 4 32 mul fmul r0 r1 r2
0 1 1 01110 0 1 1 r2[4:0] 11011 1 r1[4:0] r0[4:0]    | A64 f 2 64 mul fmul r0 r1 r2

#ORR (vector)
0 0 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 8 8 or orr r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 16 8 or orr r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 16 or orr r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 4 16 or orr r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 8 16 or orr r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 16 16 or orr r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 32 or orr r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 4 32 or orr r0 r1 r2
0 1 0 01110 10 1 r2[4:0] 00011 1 r1[4:0] r0[4:0]     | A64 i 2 64 or orr r0 r1 r2

#STR (immediate, SIMD&FP)
00 111 1 00 00 0 i0[8:0] 01 r0[4:0] r1[4:0]          | A64 f 1 8 w str r0 r1 i0
01 111 1 00 00 0 i0[8:0] 01 r0[4:0] r1[4:0]          | A64 f 1 16 w str r0 r1 i0
10 111 1 00 00 0 i0[8:0] 00 r0[4:0] r1[4:0]          | A64 f 1 32 w stur r0 r1 i0
11 111 1 00 00 0 i0[8:0] 00 r0[4:0] r1[4:0]          | A64 f 1 64 w stur r0 r1 i0
00 111 1 00 10 0 i0[8:0] 01 r0[4:0] r1[4:0]          | A64 f 1 128 w str r0 r1 i0
11 111 1 00 00 0 i0[8:0] 00 r0[4:0] r1[4:0]          | A64 i 2 32 w str r0 r1 i0

#SUB (vector)
0 0 1 01110 00 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 8 8 sub sub r0 r1 r2
0 1 1 01110 00 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 16 8 sub sub r0 r1 r2
0 0 1 01110 01 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 4 16 sub sub r0 r1 r2
0 1 1 01110 01 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 8 16 sub sub r0 r1 r2
0 0 1 01110 10 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 2 32 sub sub r0 r1 r2
0 1 1 01110 10 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 4 32 sub sub r0 r1 r2
0 1 1 01110 11 1 r2[4:0] 10000 1 r1[4:0] r0[4:0]     | A64 i 2 64 sub sub r0 r1 r2

#LSL (immediate)
0 10 100110 0 i0[5:0] 000000 r1[4:0] r0[4:0]         | A64 i 1 32 sl lsl r0 r1 i0
1 10 100110 1 i0[5:0] 000000 r1[4:0] r0[4:0]         | A64 i 1 64 sl lsl r0 r1 i0

#LSL (register)
0 0 0 11010110 r2[4:0] 0010 00 r1[4:0] r0[4:0]       | A64 i 1 32 sl lsl r0 r1 r2
1 0 0 11010110 r2[4:0] 0010 00 r1[4:0] r0[4:0]       | A64 i 1 64 sl lsl r0 r1 r2

#LSR (immediate)
0 10 100110 0 i0[5:0] 011111 r1[4:0] r0[4:0]         | A64 i 1 32 sr lsr r0 r1 i0
1 10 100110 0 i0[5:0] 011111 r1[4:0] r0[4:0]         | A64 i 1 64 sr lsr r0 r1 i0

#LSR (register)
0 0 0 11010110 r2[4:0] 0010 01 r1[4:0] r0[4:0]       | A64 i 1 32 sr lsr r0 r1 r2
1 0 0 11010110 r2[4:0] 0010 01 r1[4:0] r0[4:0]       | A64 i 1 64 sr lsr r0 r1 r2

#LD1 (vector)
#0 1 0011010 1 0 0000 0110 0 10 r1[4:0] r0[4:0]       | A64 i 4 32 r ld1r r0 r1
0 1 0011000 1 0 0000 0 0111 10 r1[4:0] r0[4:0]       | A64 i 4 32 r ld1 r0 r1

#ST1 (vector)
0 1 0011000 0 000000 0111 10 r0[4:0] r1[4:0]         | A64 i 4 32 w  st1 r0 r1
0 1 0011000 0 i0[5:0] 0111 10 r0[4:0] r1[4:0]        | A64 i 4 32 w st1 r0 r1 i0

#DUP (element, scalar)
01 0 11110000 00100 0 0000 1 r1[4:0] r0[4:0]         | A64 i 1 32 mv dup r0 r1
01 0 11110000 01000 0 0000 1 r1[4:0] r0[4:0]         | A64 i 1 64 mv dup r0 r1

#DUP (element, vector)
0 0 0 01110000 00100 0 0000 1 r1[4:0] r0[4:0]        | A64 i 2 32 mv dup r0 r1
0 1 0 01110000 01000 0 0000 1 r1[4:0] r0[4:0]        | A64 i 2 64 mv dup r0 r1

#MLA 
0 1 1 01111 10 10 r2[3:0] 0 0 00 0 0 r1[4:0] r0[4:0] | A64 i 4 32 mla mac r0 r1 r2
#FMLA
0 1 0 01110 0 1 1 r2[4:0] 11001 1 r1[4:0] r0[4:0]    | A64 f 4 32 fmla mac r0 r1 r2
